import{_ as l,r as s,o as c,c as p,a as t,b as o,d as e,w as n,e as r}from"./app-2d78b25b.js";const d={},u=t("h1",{id:"my-first-bot-tutorial",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#my-first-bot-tutorial","aria-hidden":"true"},"#"),o(" My First Bot tutorial")],-1),h=t("h2",{id:"introduction",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),o(" Introduction")],-1),f=t("p",null,"This tutorial provides an introduction to creating your first bot for Robocode Tank Royale.",-1),m=t("p",null,"You might also have a look at the provided sample bots for Robocode for inspiration. You might also use the sample bots to provide a template containing all the necessary files to create a bot for a specific programming language and platform.",-1),b=t("h2",{id:"initial-setup",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#initial-setup","aria-hidden":"true"},"#"),o(" Initial setup")],-1),g=t("p",null,[o("The first part of this tutorial is about the initial setup which is common for all bots that must be "),t("em",null,"booted"),o(" by the game regardless of which programming language is used when developing the bot.")],-1),y=t("em",null,"bot directories",-1),_=t("em",null,"root directories",-1),k=r('<h2 id="prepare-a-root-directory" tabindex="-1"><a class="header-anchor" href="#prepare-a-root-directory" aria-hidden="true">#</a> Prepare a root directory</h2><p>Robocode needs to locate your bot, which must be stored into its own <em>bot directory</em> under a <em>root directory</em>. The purpose of the root directory is to contain one to many bot directories.</p><p>So the first step is to prepare a root directory which we name <em>bots</em>. Under Windows, you might create this folder under <code>C:\\bots</code> or <code>%userprofile%\\bots</code>, and for macOS or Linux you might create a folder under <code>~/bots</code>.</p><p>If you use the UI for Robocode, you will need to add this root directory in the Bot Root Configuration so Robocode will be able to locate your bot(s).</p><h2 id="prepare-a-bot-directory" tabindex="-1"><a class="header-anchor" href="#prepare-a-bot-directory" aria-hidden="true">#</a> Prepare a bot directory</h2>',5),q=t("em",null,"bots",-1),v=t("em",null,"MyFirstBot",-1),w=t("code",null,"../bots/MyFirstBot",-1),x=t("h2",{id:"create-a-json-file-for-bot-info",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#create-a-json-file-for-bot-info","aria-hidden":"true"},"#"),o(" Create a JSON file for bot info")],-1),N={href:"https://fileinfo.com/extension/json",target:"_blank",rel:"noopener noreferrer"},B=t("code",null,"../bots/MyFirstBot/MyFirstBot.json",-1),R=r(`<p>This is the content of the JSON file, which you can copy and paste into the file:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;My First Bot&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;authors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;«enter your name»&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;My first bot&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;homepage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;«insert link to a home page for your bot»&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;countryCodes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;«enter your country code, e.g. us»&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;platform&quot;</span><span class="token operator">:</span> <span class="token string">&quot;«enter programming platform, e.g. Java or .Net»&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;programmingLang&quot;</span><span class="token operator">:</span> <span class="token string">&quot;«enter programming language, e.g. Java or C#»&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div></div><p>The fields <code>name</code>, <code>version</code> and <code>authors</code> are required, and the rest of the fields are optional.</p><p>Note that the <code>authors</code> field should contain your full name, nickname, or handle, which identifies you. The <code>platform</code> and <code>programmingLang</code> depends on your choice of programming language and platform. For example, the platform could be Java 17, and the programming Language Kotlin 1.8.20 or Java 17. Or the platform could be .Net 6.0, and the programming language C# 10.0 or F# 6.0.</p><p>This concludes the common part of the tutorial, and the following depends on the platform of your choice.</p><h2 id="select-platform" tabindex="-1"><a class="header-anchor" href="#select-platform" aria-hidden="true">#</a> Select platform</h2><p>The rest of the tutorial is split up based on the available APIs for different platforms:</p>`,7);function T(j,F){const a=s("RouterLink"),i=s("ExternalLinkIcon");return c(),p("div",null,[u,h,f,m,t("p",null,[o("Note that this tutorial is aimed towards the "),e(a,{to:"/api/apis.html"},{default:n(()=>[o("APIs")]),_:1}),o(" available for Robocode Tank Royale.")]),b,g,t("p",null,[o("I recommend that you read about the "),e(a,{to:"/articles/booter.html"},{default:n(()=>[o("booter")]),_:1}),o(" first before continuing on this tutorial as the following assumes you are somewhat familiar with the file name conventions, and the concept of "),y,o(", and "),_,o(".")]),k,t("p",null,[o("Next, you should create a bot directory inside the "),q,o(" directory for your first bot, which we name "),v,o(", so it will be located under "),w,o(". All your bot files must be put into this folder and share the same file name as the bot directory (more info in the "),e(a,{to:"/articles/booter.html"},{default:n(()=>[o("booter")]),_:1}),o(" article).")]),x,t("p",null,[o("A "),t("a",N,[o("JSON"),e(i)]),o(" file is used for providing the game with information about your bot. You must create a MyFirstBot.json file and put this into your bot directory, i.e. into "),B,o(".")]),R,t("ul",null,[t("li",null,[e(a,{to:"/tutorial/dotnet/my-first-bot-for-dotnet.html"},{default:n(()=>[o(".Net")]),_:1})]),t("li",null,[e(a,{to:"/tutorial/jvm/my-first-bot-for-jvm.html"},{default:n(()=>[o("Java / JVM")]),_:1})])])])}const J=l(d,[["render",T],["__file","my-first-bot.html.vue"]]);export{J as default};
