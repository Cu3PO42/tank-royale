import{_ as c,r as i,o as r,c as l,a as t,b as n,d as a,w as p,e as o}from"./app-04ea9bc7.js";const u={},d=t("h1",{id:"my-first-bot-for-net",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#my-first-bot-for-net","aria-hidden":"true"},"#"),n(" My First Bot for .Net")],-1),h=t("h2",{id:"introduction",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),n(" Introduction")],-1),k={href:"https://docs.microsoft.com/en-us/dotnet/csharp/",title:"C# documentation",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.microsoft.com/en-us/dotnet/visual-basic/",title:"Visual Basic documentation",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.microsoft.com/en-us/dotnet/fsharp/",title:"F# documentation",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.microsoft.com/en-us/dotnet/csharp/",title:"C# documentation",target:"_blank",rel:"noopener noreferrer"},b={href:"https://dotnet.microsoft.com/en-us/",title:".Net homepage",target:"_blank",rel:"noopener noreferrer"},_=t("h2",{id:"programming",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#programming","aria-hidden":"true"},"#"),n(" Programming")],-1),y=t("h3",{id:"net-api",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#net-api","aria-hidden":"true"},"#"),n(" .Net API")],-1),B=t("h3",{id:"create-a-source-file",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#create-a-source-file","aria-hidden":"true"},"#"),n(" Create a source file")],-1),v=t("code",null,"../bots/MyFirstBot",-1),w=t("code",null,"MyFirstBot.cs",-1),R={href:"https://en.wikipedia.org/wiki/Integrated_development_environment",title:"Integrated development environment",target:"_blank",rel:"noopener noreferrer"},T={href:"https://code.visualstudio.com/",title:"Visual Studio Code homepage",target:"_blank",rel:"noopener noreferrer"},x={href:"https://visualstudio.microsoft.com/",title:"Visual Studio homepage",target:"_blank",rel:"noopener noreferrer"},A=o(`<h3 id="initial-code" tabindex="-1"><a class="header-anchor" href="#initial-code" aria-hidden="true">#</a> Initial code</h3><p>The initial skeleton of your bot could look like this:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Robocode<span class="token punctuation">.</span>TankRoyale<span class="token punctuation">.</span>BotApi</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFirstBot</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Bot</span></span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre></div>`,3),I=t("code",null,"MyFirstBot",-1),S={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html",title:"Bot class",target:"_blank",rel:"noopener noreferrer"},F=t("code",null,"Robocode.TankRoyale.BotApi",-1),N=t("h3",{id:"startup-main-entry",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#startup-main-entry","aria-hidden":"true"},"#"),n(" Startup / Main entry")],-1),M={href:"https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/program-structure/main-command-line",title:"Main() method",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/program-structure/main-command-line",title:"Main() method",target:"_blank",rel:"noopener noreferrer"},O=o(`<div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>    <span class="token comment">// The main method starts our bot</span>
    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyFirstBot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Constructor, which loads the bot config file</span>
    <span class="token function">MyFirstBot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>BotInfo<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;MyFirstBot.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre></div>`,1),E={href:"https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/program-structure/main-command-line",title:"Main() method",target:"_blank",rel:"noopener noreferrer"},P={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BaseBot.html#Robocode_TankRoyale_BotApi_BaseBot_Start",title:"Start() method",target:"_blank",rel:"noopener noreferrer"},j=t("p",null,[n("The bot will attempt to "),t("em",null,"join"),n(" the server and wait for a signal to engage in a new battle, where one or multiple instances of this bot must participate.")],-1),W=t("code",null,"MyFirstBot",-1),q={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BotInfo.html",title:"BotInfo class",target:"_blank",rel:"noopener noreferrer"},V={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BotInfo.html",title:"BotInfo class",target:"_blank",rel:"noopener noreferrer"},H={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BotInfo.html#Robocode_TankRoyale_BotApi_BotInfo_FromFile_System_String_",title:"BotInfo.FromFile() method",target:"_blank",rel:"noopener noreferrer"},L={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BotInfo.html",title:"BotInfo class",target:"_blank",rel:"noopener noreferrer"},G=t("code",null,"MyFirstBot.json",-1),D=t("p",null,"Note that it is also possible to provide all the necessary configuration fields programmatically without a file.",-1),z=t("h3",{id:"the-run-method",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#the-run-method","aria-hidden":"true"},"#"),n(" The Run method")],-1),J={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html#Robocode_TankRoyale_BotApi_Bot_Run",title:"Bot.Run() method",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html#Robocode_TankRoyale_BotApi_Bot_Run",title:"Bot.Run() method",target:"_blank",rel:"noopener noreferrer"},U=o(`<div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>    <span class="token comment">// Called when a new round is started -&gt; initialize and do movement</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Repeat while the bot is running</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>IsRunning<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">Forward</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">TurnGunRight</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">Back</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">TurnGunRight</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre></div><p>With the code above, the bot will run in a loop, starting by moving forward 100 units. Then it will turn the gun 360°, move back 100 units and turn the gun 360° again. So the bot will continuously move forward and back all the time and rotate the gun between moving.</p>`,2),K={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html#Robocode_TankRoyale_BotApi_Bot_Run",title:"Bot.Run() method",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html#Robocode_TankRoyale_BotApi_Bot_Run",title:"Bot.Run() method",target:"_blank",rel:"noopener noreferrer"},X={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html#Robocode_TankRoyale_BotApi_Bot_Run",title:"Bot.Run() method",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.IBot.html#Robocode_TankRoyale_BotApi_IBot_IsRunning",title:"IBot.IsRunning property/flag",target:"_blank",rel:"noopener noreferrer"},$=t("code",null,"false",-1),nn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.IBot.html#Robocode_TankRoyale_BotApi_IBot_IsRunning",title:"IBot.IsRunning property/flag",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.IBot.html#Robocode_TankRoyale_BotApi_IBot_IsRunning",title:"IBot.IsRunning property/flag",target:"_blank",rel:"noopener noreferrer"},an=t("code",null,"false",-1),en=t("h3",{id:"event-handlers",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#event-handlers","aria-hidden":"true"},"#"),n(" Event handlers")],-1),on={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html",title:"Bot API",target:"_blank",rel:"noopener noreferrer"},sn=t("em",null,'"SomeEvent"',-1),pn=t("em",null,"On",-1),cn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BaseBot.html#Robocode_TankRoyale_BotApi_BaseBot_OnScannedBot_Robocode_TankRoyale_BotApi_Events_ScannedBotEvent_",title:"BaseBot.OnScannedBot(ScannedBotEvent) event handler",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.IBot.html",title:"IBot interface",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html",title:"Bot class",target:"_blank",rel:"noopener noreferrer"},un={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BaseBot.html#Robocode_TankRoyale_BotApi_BaseBot_OnScannedBot_Robocode_TankRoyale_BotApi_Events_ScannedBotEvent_",title:"BaseBot.OnScannedBot(ScannedBotEvent) event handler",target:"_blank",rel:"noopener noreferrer"},dn=o(`<div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>    <span class="token keyword">using</span> <span class="token namespace">Robocode<span class="token punctuation">.</span>TankRoyale<span class="token punctuation">.</span>BotApi<span class="token punctuation">.</span>Events</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>

    <span class="token comment">// We saw another bot -&gt; fire!</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnScannedBot</span><span class="token punctuation">(</span><span class="token class-name">ScannedBotEvent</span> evt<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">Fire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre></div>`,1),hn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.BaseBot.html#Robocode_TankRoyale_BotApi_BaseBot_OnHitByBullet_Robocode_TankRoyale_BotApi_Events_BulletHitBotEvent_",title:"BaseBot.OnHitByBullet(HitByBulletEvent) event handler",target:"_blank",rel:"noopener noreferrer"},kn=o(`<div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code>    <span class="token keyword">using</span> <span class="token namespace">Robocode<span class="token punctuation">.</span>TankRoyale<span class="token punctuation">.</span>BotApi<span class="token punctuation">.</span>Events</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>

    <span class="token comment">// We were hit by a bullet -&gt; turn perpendicular to the bullet</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnHitByBullet</span><span class="token punctuation">(</span><span class="token class-name">HitByBulletEvent</span> evt<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Calculate the bearing to the direction of the bullet</span>
        <span class="token class-name"><span class="token keyword">double</span></span> bearing <span class="token operator">=</span> <span class="token function">CalcBearing</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>Bullet<span class="token punctuation">.</span>Direction<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Turn 90 degrees to the bullet direction based on the bearing</span>
        <span class="token function">TurnLeft</span><span class="token punctuation">(</span><span class="token number">90</span> <span class="token operator">-</span> bearing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre></div>`,1),gn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html",title:"Bot API",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://robocode-dev.github.io/tank-royale/api/dotnet/api/Robocode.TankRoyale.BotApi.Bot.html#Robocode_TankRoyale_BotApi_Bot_CalcBearing_System_Double_",title:"Bot.CalcBearing(Double) method",target:"_blank",rel:"noopener noreferrer"},fn=o(`<h3 id="putting-it-all-together" tabindex="-1"><a class="header-anchor" href="#putting-it-all-together" aria-hidden="true">#</a> Putting it all together</h3><p>Okay, let us put all the parts together in a single source file:</p><div class="language-csharp" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Robocode<span class="token punctuation">.</span>TankRoyale<span class="token punctuation">.</span>BotApi</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Robocode<span class="token punctuation">.</span>TankRoyale<span class="token punctuation">.</span>BotApi<span class="token punctuation">.</span>Events</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFirstBot</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Bot</span></span>
<span class="token punctuation">{</span>
    <span class="token comment">// The main method starts our bot</span>
    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyFirstBot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Constructor, which loads the bot config file</span>
    <span class="token function">MyFirstBot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>BotInfo<span class="token punctuation">.</span><span class="token function">FromFile</span><span class="token punctuation">(</span><span class="token string">&quot;MyFirstBot.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token comment">// Called when a new round is started -&gt; initialize and do some movement</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Repeat while the bot is running</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>IsRunning<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">Forward</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">TurnGunRight</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">Back</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">TurnGunRight</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// We saw another bot -&gt; fire!</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnScannedBot</span><span class="token punctuation">(</span><span class="token class-name">ScannedBotEvent</span> evt<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">Fire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// We were hit by a bullet -&gt; turn perpendicular to the bullet</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnHitByBullet</span><span class="token punctuation">(</span><span class="token class-name">HitByBulletEvent</span> evt<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Calculate the bearing to the direction of the bullet</span>
        <span class="token class-name"><span class="token keyword">double</span></span> bearing <span class="token operator">=</span> <span class="token function">CalcBearing</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>Bullet<span class="token punctuation">.</span>Direction<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Turn 90 degrees to the bullet direction based on the bearing</span>
        <span class="token function">TurnLeft</span><span class="token punctuation">(</span><span class="token number">90</span> <span class="token operator">-</span> bearing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="running-the-bot" tabindex="-1"><a class="header-anchor" href="#running-the-bot" aria-hidden="true">#</a> Running the bot</h2>`,4),bn={href:"https://fileinfo.com/extension/csproj",title:"C# project source file",target:"_blank",rel:"noopener noreferrer"},_n=o(`<h3 id="c-project-source-file" tabindex="-1"><a class="header-anchor" href="#c-project-source-file" aria-hidden="true">#</a> C# project source file</h3><p>So we need to create a <code>MyFirstBot.csproj</code> file with the following content:</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Project</span> <span class="token attr-name">Sdk</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Microsoft.NET.Sdk<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RootNamespace</span><span class="token punctuation">&gt;</span></span>MyFirstBot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RootNamespace</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OutputType</span><span class="token punctuation">&gt;</span></span>Exe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>OutputType</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TargetFramework</span><span class="token punctuation">&gt;</span></span>net6.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TargetFramework</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LangVersion</span><span class="token punctuation">&gt;</span></span>8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LangVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PackageReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Robocode.TankRoyale.BotApi<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.10.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Project</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,3),yn={href:"https://fileinfo.com/extension/csproj",title:"C# project source file",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet",title:"dotnet command",target:"_blank",rel:"noopener noreferrer"},vn=o('<p>Most parts of this file are static content. But these fields need attention:</p><ul><li><code>RootNamespace</code> should contain the exact class name of your bot.</li><li><code>TargetFramework</code> tells what .Net version your bot requires for running.</li><li><code>LangVersion</code> is the C# version</li><li><code>Version</code> for the <code>PackageReference</code> for the <em>Robocode.TankRoyale.BotApi</em> must use the version of the API the bot is built for.</li></ul><h3 id="api-available-at-nuget" tabindex="-1"><a class="header-anchor" href="#api-available-at-nuget" aria-hidden="true">#</a> API available at Nuget</h3>',3),wn=t("em",null,"Robocode.TankRoyale.BotApi",-1),Rn={href:"https://www.nuget.org/",title:"Nuget homepage",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://www.nuget.org/packages/Robocode.TankRoyale.BotApi/",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet",title:"dotnet command",target:"_blank",rel:"noopener noreferrer"},An=o(`<div class="language-text" data-ext="text"><pre class="language-text"><code>dotnet add package Robocode.TankRoyale.BotApi
</code></pre></div><p>This installs the newest available version of the Bot API for Robocode Tank Royale. You can install a specific version by adding the <code>--version</code> option with the specific version:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>dotnet add package Robocode.TankRoyale.BotApi --version 0.10.0
</code></pre></div><h3 id="scripts-for-starting-the-bot" tabindex="-1"><a class="header-anchor" href="#scripts-for-starting-the-bot" aria-hidden="true">#</a> Scripts for starting the bot</h3>`,4),In={href:"https://fileinfo.com/extension/cmd",title:"Windows Command File",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://fileinfo.com/extension/sh",title:"Bash Shell Script",target:"_blank",rel:"noopener noreferrer"},Fn=o(`<p>We create a command file for Windows named <code>MyFirstBot.cmd</code> and put it into our bot directory:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>dotnet run &gt;nul
</code></pre></div><p>So the <code>dotnet run</code> part is used for starting the bot standing in the bot directory from a command prompt.</p><p><em><strong>IMPORTANT NOTE:</strong></em> The <code>&gt;nul</code> is a work-around necessary to avoid a Windows-specific quirk where the bot becomes unresponsive when started up as a process with the Robocode. <sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>Next, we provide a shell script for macOS and Linux named <code>MyFirstBot.sh</code> and put it into our bot directory:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>#!/bin/sh
dotnet run 
</code></pre></div><p>Note that we need to set the file permission to grant <em>read</em>, <em>write</em>, and especially the <em>execute</em> right of the script for the owner and owner´s group, e.g. set the permissions to <code>775</code> (<code>-rwxrwxr-x</code>). We can do this with this command:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>chown 775 MyFirstBot.sh
</code></pre></div><p>Note that the <code>5</code> (<em>read</em> and <em>execute</em>) is set as everybody else than the owner and owner´s group does should not have the <em>write</em> permission per default unless it is explicitly granted by you. 😉</p><p>Now you have everything in place to run your bot with Robocode Tank Royale.</p><p>Note that the server must be running <em>locally</em> (on your system) when attempting to run the bot locally; otherwise your bot will fail with an error because it cannot find the server. The server can be started using the Robocode UI.</p><h2 id="packaging-your-bot" tabindex="-1"><a class="header-anchor" href="#packaging-your-bot" aria-hidden="true">#</a> Packaging your bot</h2><p>If you need to package your bot for distribution, you can do this by zip-packing the bot directory. The zip archive should contain:</p><ul><li>Source file (.cs, .fs, or .vb)</li><li>Project source file (.csproj, .fsproj, or .vbproj)</li><li>Script files (.cmd and .sh)</li><li>JSON config file (.json)</li></ul>`,14),Nn={href:"https://fileinfo.com/extension/readme",title:"Readme File",target:"_blank",rel:"noopener noreferrer"},Mn=o('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>? &quot;Note that the unresponsiveness of a Windows process running a bot is not observed when running the bot directly from the command line with or without the script; only when using a Java process for running the script inside the Robocode booter.&quot; <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>',2);function Cn(On,En){const s=i("RouterLink"),e=i("ExternalLinkIcon");return r(),l("div",null,[d,h,t("p",null,[n("This tutorial is meant for the .Net platform and a continuation of "),a(s,{to:"/tutorial/my-first-bot.html"},{default:p(()=>[n("My First Bot")]),_:1}),n(" tutorial.")]),t("p",null,[n("The programming language used in this tutorial is "),t("a",k,[n("C#"),a(e)]),n(", which is a very popular programming language for .Net. But other .Net programming languages like "),t("a",g,[n("Visual Basic"),a(e)]),n(" and "),t("a",m,[n("F#"),a(e)]),n(" can be used as well.")]),t("p",null,[n("This tutorial assumes you are already familiar with basic "),t("a",f,[n("C#"),a(e)]),n(" and "),t("a",b,[n(".Net"),a(e)]),n(" programming. But this tutorial should suit well for practising your skills programming for .Net in C# by making a bot for Robocode.")]),_,y,t("p",null,[n("The documentation of the .Net API for Robocode Tank Royale is available on "),a(s,{to:"/api/apis.html"},{default:p(()=>[n("this page")]),_:1}),n(".")]),B,t("p",null,[n("Inside your bot directory ("),v,n(") you need to create a C# source file named "),w,n(". You can edit that file using a text editor of your choice, or an "),t("a",R,[n("IDE"),a(e)]),n(" like e.g. "),t("a",T,[n("Visual Studio Code"),a(e)]),n(" or "),t("a",x,[n("Visual Studio"),a(e)]),n(".")]),A,t("p",null,[n("The class in this example ("),I,n(") is inherited from the "),t("a",S,[n("Bot"),a(e)]),n(" class from the "),F,n(" namespace provides methods for controlling the bot but also makes it possible to receive events from the game. The API is taking care of the communication with the server behind the scene.")]),N,t("p",null,[n("The next thing we need to do is to declare a "),t("a",M,[n("Main"),a(e)]),n(" method for our bot. The bot will run like an ordinary application, and hence the "),t("a",C,[n("Main"),a(e)]),n(" method is the entry point of the bot.")]),O,t("p",null,[n("The "),t("a",E,[n("Main"),a(e)]),n(" method in this example simply calls the "),t("a",P,[n("Start"),a(e)]),n(" method of the bot, which will let the bot startup reading configuration and start communicating with the server.")]),j,t("p",null,[n("The constructor of "),W,n(" is set up to call the base constructor, which needs an "),t("a",q,[n("BotInfo"),a(e)]),n(" object containing the bot configuration. The "),t("a",V,[n("BotInfo"),a(e)]),n(" class contains a convenient method named "),t("a",H,[n("FromFile"),a(e)]),n(" which can initialize the "),t("a",L,[n("BotInfo"),a(e)]),n(" by reading a JSON file. In this case, it will read the "),G,n(" file we created earlier, which must be available within the bot directory (or some other file location accessible for the bot).")]),D,z,t("p",null,[n("When the bot is started by the game, the "),t("a",J,[n("Run"),a(e)]),n(" method will be called. Hence, your bot should override this method to provide the logic for the bot when the game is started. The "),t("a",Y,[n("Run"),a(e)]),n(" method should do all required initializing. After that, it should enter a loop that runs until the game is ended.")]),U,t("p",null,[n("When leaving the "),t("a",K,[n("Run"),a(e)]),n(" method, the bot will not be able to send new commands each round besides code that runs in event handlers. Therefore, a loop is used for preventing the "),t("a",Q,[n("Run"),a(e)]),n(" method from exiting. However, we should stop the loop as soon as the bot is no longer running, and hence need to exit the "),t("a",X,[n("Run"),a(e)]),n(" method when "),t("a",Z,[n("IsRunning"),a(e)]),n(" becomes "),$,n(".")]),t("p",null,[n("The "),t("a",nn,[n("IsRunning"),a(e)]),n(" property is a flag maintained by the API. When the bot is told to stop/terminate its execution, the "),t("a",tn,[n("IsRunning"),a(e)]),n(" property will automatically be set to "),an,n(" by the API.")]),en,t("p",null,[n("The "),t("a",on,[n("Bot API"),a(e)]),n(" provides a lot of event handlers (On"),sn,n(" methods) that are triggered by different types of events. All event handlers in the Bot API start with the "),pn,n("-prefix like e.g. "),t("a",cn,[n("OnScannedBot"),a(e)]),n(". All event handlers are available with the "),t("a",rn,[n("IBot"),a(e)]),n(" interface, which the "),t("a",ln,[n("Bot"),a(e)]),n(" class implements.")]),t("p",null,[n("Talking about the common "),t("a",un,[n("OnScannedBot"),a(e)]),n(" event handler, we can implement this handler to fire the cannon whenever our bot scans an opponent bot:")]),dn,t("p",null,[n("We can also implement another event handler "),t("a",hn,[n("OnHitByBullet"),a(e)]),n(" to let the bot attempt to avoid new bullet hits by turning the bot perpendicular to the bullet direction:")]),kn,t("p",null,[n("Note that the "),t("a",gn,[n("Bot API"),a(e)]),n(" provides helper methods like "),t("a",mn,[n("CalcBearing"),a(e)]),n(" to ease calculating angles and bearings in the game.")]),fn,t("p",null,[n("Now we got a JSON configuration file and the program for our bot. The next step is to provide the files for running the bot application. We need to set up a C# project source file ("),t("a",bn,[n(".csproj"),a(e)]),n(") and scripts for starting the bot.")]),_n,t("p",null,[n("This "),t("a",yn,[n("C# project source file"),a(e)]),n(" is a config file used by the "),t("a",Bn,[n("dotnet"),a(e)]),n(" command used for compiling and running the bot.")]),vn,t("p",null,[n("The "),wn,n(" is available on "),t("a",Rn,[n("Nuget"),a(e)]),n(" here: "),t("a",Tn,[n("https://www.nuget.org/packages/Robocode.TankRoyale.BotApi/"),a(e)])]),t("p",null,[n("You can install the bot API using the "),t("a",xn,[n("dotnet"),a(e)]),n(" command like this:")]),An,t("p",null,[n("The remaining part is to supply some script files for starting up the bot. This will ease starting up the bot from the command line. But those files are also necessary for booting up the bot from Robocode, which will look out for script files when examining the bot directory and figure out how to run the bot. The script files tell the "),a(s,{to:"/articles/booter.html",title:"Robocode booter"},{default:p(()=>[n("booter")]),_:1}),n(" of Robocode how to start the bot, which is different for each programming language, platform and OS.")]),t("p",null,[n("With .Net it is possible to run your bot under Windows, macOS, and Linux. Hence, it is a good idea to provide script files for all these OSes, which mean that we should provide a "),t("a",In,[n("command file"),a(e)]),n(" for Windows, and a "),t("a",Sn,[n("shell script"),a(e)]),n(" for macOS and Linux.")]),Fn,t("p",null,[n("And then you might want to provide a "),t("a",Nn,[n("README"),a(e)]),n(" file to provide some information for other people about your bot. 😃")]),Mn])}const jn=c(u,[["render",Cn],["__file","my-first-bot-for-dotnet.html.vue"]]);export{jn as default};
